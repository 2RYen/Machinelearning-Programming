{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"12Vlxn6-GMxNP3nT3CP28-S3yGh63hZnB","timestamp":1749097858803}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"UIbc8ALfizDD"},"outputs":[],"source":["# This Python 3 environment comes with many helpful analytics libraries installed\n","# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n","# For example, here's several helpful packages to load\n","\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","\n","# Input data files are available in the read-only \"../input/\" directory\n","# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n","\n","import os\n","for dirname, _, filenames in os.walk('/kaggle/input'):\n","    for filename in filenames:\n","        print(os.path.join(dirname, filename))\n","\n","# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\"\n","# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"]},{"cell_type":"markdown","source":["# 1. 데이터 불러오기"],"metadata":{"id":"rkOB6I-8i4EC"}},{"cell_type":"code","source":["df_tr = pd.read_csv('/kaggle/input/2025-hallym-mlp-project-3/train.csv', index_col='ID')\n","df_te = pd.read_csv('/kaggle/input/2025-hallym-mlp-project-3/test.csv', index_col='ID')\n","df_submission = pd.read_csv('/kaggle/input/2025-hallym-mlp-project-3/sample_submission.csv', index_col='ID')"],"metadata":{"id":"6acO7DUJi40W"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(df_tr.shape)\n","df_tr.head()"],"metadata":{"id":"LHeFol-Qi7LH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(df_te.shape)\n","df_te.head()"],"metadata":{"id":"pwRAiaYii8f_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(df_submission.shape)\n","df_submission.head()"],"metadata":{"id":"O31M29cPi9d7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["## 훈련데이터\n","X_tr = df_tr.drop(columns='demand')\n","y_tr = df_tr['demand']\n","\n","## 시험데이터\n","X_te = df_te.copy()"],"metadata":{"id":"ZfUWSUv4jyT3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 2. 데이터 전처리 및 회귀 모델 개발"],"metadata":{"id":"C4-uy6uPi-i_"}},{"cell_type":"code","source":["##################################\n","##\n","##  구현해야하는 부분\n","##\n","##################################"],"metadata":{"id":"0xVel6QgjBiE"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 3. 제출용 CSV 파일 만들기"],"metadata":{"id":"L4Fe7DDfjEtT"}},{"cell_type":"code","source":["p_te = model.predict(X_te)"],"metadata":{"id":"LWoACEuijHLg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_submission.loc[:,'demand'] = p_te"],"metadata":{"id":"BRQwQG3WjSFW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_submission.to_csv('/kaggle/working/submission.csv')"],"metadata":{"id":"QnwIYuYDjV2h"},"execution_count":null,"outputs":[]}]}