{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1XFLtoKTwmGJN9dw-_iS-D6GjyFYIEXSj","timestamp":1747111362954}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# 구글드라이브 연결하기"],"metadata":{"id":"Q4uo1UnYKHXb"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_l5kYgJPKDyS","executionInfo":{"status":"ok","timestamp":1747229143828,"user_tz":-540,"elapsed":24113,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"b7c03059-e487-4749-a403-6e52bd1e0214"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","source":["# 1. 훈련데이터 불러오기"],"metadata":{"id":"bZMJFiGcKKht"}},{"cell_type":"code","execution_count":2,"metadata":{"id":"BPPCO5QtPgBf","executionInfo":{"status":"ok","timestamp":1747229145357,"user_tz":-540,"elapsed":1521,"user":{"displayName":"김민주","userId":"13715885916761677384"}}},"outputs":[],"source":["import os\n","import pandas as pd"]},{"cell_type":"code","source":["## 디렉토리 확인\n","dirname = os.path.join('drive', 'MyDrive', '데이콘')\n","print(dirname)"],"metadata":{"id":"RfrFbvJnQHh3","executionInfo":{"status":"ok","timestamp":1747229506679,"user_tz":-540,"elapsed":34,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"e0dee0dc-b176-4994-9ec5-8bbb35fa2c92"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["drive/MyDrive/데이콘\n"]}]},{"cell_type":"code","source":["## 파일 경로 확인\n","filepath_train = os.path.join(dirname, 'train.csv')\n","print(os.path.exists(filepath_train))"],"metadata":{"id":"rS3piT4uQr_d","executionInfo":{"status":"ok","timestamp":1747229508374,"user_tz":-540,"elapsed":42,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"a5dba462-2ae6-4b81-b6c9-bf2d978da9ce"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["True\n"]}]},{"cell_type":"markdown","source":["## 1.1. CSV 파일을 Pandas 데이터프레임으로 불러오기"],"metadata":{"id":"ephA2qHyKcpR"}},{"cell_type":"code","source":["df_raw = pd.read_csv(filepath_train)"],"metadata":{"id":"Y5fZf315RLqN","executionInfo":{"status":"ok","timestamp":1747229511769,"user_tz":-540,"elapsed":920,"user":{"displayName":"김민주","userId":"13715885916761677384"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["## 훈련데이터 크기 확인\n","df_raw.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c3NfOCdIRjMD","executionInfo":{"status":"ok","timestamp":1747229727437,"user_tz":-540,"elapsed":13,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"a7d56077-586b-47df-a9ac-8c12458a063b"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(87159, 16)"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["## 훈련데이터 상위 5개 살펴보기\n","df_raw.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"Nork27QKRzMM","executionInfo":{"status":"ok","timestamp":1747229728868,"user_tz":-540,"elapsed":360,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"49b3b564-7e03-43f1-dad1-131c1d18a3f6"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            ID  Age Gender Country Race Family_Background Radiation_History  \\\n","0  TRAIN_00000   80      M     CHN  ASN          Positive           Exposed   \n","1  TRAIN_00001   37      M     NGA  ASN          Positive         Unexposed   \n","2  TRAIN_00002   71      M     CHN  MDE          Positive         Unexposed   \n","3  TRAIN_00003   40      F     IND  HSP          Negative         Unexposed   \n","4  TRAIN_00004   53      F     CHN  CAU          Negative         Unexposed   \n","\n","  Iodine_Deficiency       Smoke Weight_Risk Diabetes  Nodule_Size  TSH_Result  \\\n","0        Sufficient  Non-Smoker   Not Obese       No     0.650355    2.784735   \n","1        Sufficient      Smoker       Obese       No     2.950430    0.911624   \n","2        Sufficient  Non-Smoker   Not Obese      Yes     2.200023    0.717754   \n","3        Sufficient  Non-Smoker       Obese       No     3.370796    6.846380   \n","4        Sufficient  Non-Smoker   Not Obese       No     4.230048    0.439519   \n","\n","   T4_Result  T3_Result  Cancer  \n","0   6.744603   2.575820       1  \n","1   7.303305   2.505317       1  \n","2  11.137459   2.381080       0  \n","3  10.175254   0.753023       0  \n","4   7.194450   0.569356       1  "],"text/html":["\n","  <div id=\"df-a241fcd6-2992-4f97-8b45-940de06257ba\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Age</th>\n","      <th>Gender</th>\n","      <th>Country</th>\n","      <th>Race</th>\n","      <th>Family_Background</th>\n","      <th>Radiation_History</th>\n","      <th>Iodine_Deficiency</th>\n","      <th>Smoke</th>\n","      <th>Weight_Risk</th>\n","      <th>Diabetes</th>\n","      <th>Nodule_Size</th>\n","      <th>TSH_Result</th>\n","      <th>T4_Result</th>\n","      <th>T3_Result</th>\n","      <th>Cancer</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>TRAIN_00000</td>\n","      <td>80</td>\n","      <td>M</td>\n","      <td>CHN</td>\n","      <td>ASN</td>\n","      <td>Positive</td>\n","      <td>Exposed</td>\n","      <td>Sufficient</td>\n","      <td>Non-Smoker</td>\n","      <td>Not Obese</td>\n","      <td>No</td>\n","      <td>0.650355</td>\n","      <td>2.784735</td>\n","      <td>6.744603</td>\n","      <td>2.575820</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>TRAIN_00001</td>\n","      <td>37</td>\n","      <td>M</td>\n","      <td>NGA</td>\n","      <td>ASN</td>\n","      <td>Positive</td>\n","      <td>Unexposed</td>\n","      <td>Sufficient</td>\n","      <td>Smoker</td>\n","      <td>Obese</td>\n","      <td>No</td>\n","      <td>2.950430</td>\n","      <td>0.911624</td>\n","      <td>7.303305</td>\n","      <td>2.505317</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>TRAIN_00002</td>\n","      <td>71</td>\n","      <td>M</td>\n","      <td>CHN</td>\n","      <td>MDE</td>\n","      <td>Positive</td>\n","      <td>Unexposed</td>\n","      <td>Sufficient</td>\n","      <td>Non-Smoker</td>\n","      <td>Not Obese</td>\n","      <td>Yes</td>\n","      <td>2.200023</td>\n","      <td>0.717754</td>\n","      <td>11.137459</td>\n","      <td>2.381080</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>TRAIN_00003</td>\n","      <td>40</td>\n","      <td>F</td>\n","      <td>IND</td>\n","      <td>HSP</td>\n","      <td>Negative</td>\n","      <td>Unexposed</td>\n","      <td>Sufficient</td>\n","      <td>Non-Smoker</td>\n","      <td>Obese</td>\n","      <td>No</td>\n","      <td>3.370796</td>\n","      <td>6.846380</td>\n","      <td>10.175254</td>\n","      <td>0.753023</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>TRAIN_00004</td>\n","      <td>53</td>\n","      <td>F</td>\n","      <td>CHN</td>\n","      <td>CAU</td>\n","      <td>Negative</td>\n","      <td>Unexposed</td>\n","      <td>Sufficient</td>\n","      <td>Non-Smoker</td>\n","      <td>Not Obese</td>\n","      <td>No</td>\n","      <td>4.230048</td>\n","      <td>0.439519</td>\n","      <td>7.194450</td>\n","      <td>0.569356</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a241fcd6-2992-4f97-8b45-940de06257ba')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a241fcd6-2992-4f97-8b45-940de06257ba button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a241fcd6-2992-4f97-8b45-940de06257ba');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-ff238b41-902a-4c11-880d-4dcfee2f48c1\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ff238b41-902a-4c11-880d-4dcfee2f48c1')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-ff238b41-902a-4c11-880d-4dcfee2f48c1 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_raw","summary":"{\n  \"name\": \"df_raw\",\n  \"rows\": 87159,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 87159,\n        \"samples\": [\n          \"TRAIN_06266\",\n          \"TRAIN_00378\",\n          \"TRAIN_36129\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": 14,\n        \"max\": 88,\n        \"num_unique_values\": 75,\n        \"samples\": [\n          53,\n          74,\n          25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"KOR\",\n          \"NGA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Race\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"MDE\",\n          \"AFR\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Family_Background\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Negative\",\n          \"Positive\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Radiation_History\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Unexposed\",\n          \"Exposed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Iodine_Deficiency\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Deficient\",\n          \"Sufficient\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Smoke\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Smoker\",\n          \"Non-Smoker\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight_Risk\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Obese\",\n          \"Not Obese\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Diabetes\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nodule_Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.441928061560285,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 501,\n        \"samples\": [\n          2.460042,\n          1.350209\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TSH_Result\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.861229390138943,\n        \"min\": 0.1,\n        \"max\": 10.0,\n        \"num_unique_values\": 86590,\n        \"samples\": [\n          3.689433,\n          6.21504\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T4_Result\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.165974516752873,\n        \"min\": 4.5,\n        \"max\": 12.0,\n        \"num_unique_values\": 86473,\n        \"samples\": [\n          8.475276,\n          11.801826\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T3_Result\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8670128084133244,\n        \"min\": 0.5,\n        \"max\": 3.5,\n        \"num_unique_values\": 85302,\n        \"samples\": [\n          3.196713,\n          0.665974\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cancer\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["# 2. 훈련데이터 전처리하기"],"metadata":{"id":"Ic7IngSxK9Qr"}},{"cell_type":"markdown","source":["## 2.1. 특징값(X), 목표값(y) 추출하기"],"metadata":{"id":"76i9JNClLCuL"}},{"cell_type":"code","source":["## 목표값 추출\n","df_y = df_raw.loc[:,\"Cancer\"]"],"metadata":{"id":"j0wQa6sFSURy","executionInfo":{"status":"ok","timestamp":1747229732130,"user_tz":-540,"elapsed":4,"user":{"displayName":"김민주","userId":"13715885916761677384"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["## 특징값 추출\n","df_X = df_raw.drop(\"Cancer\", axis=1)"],"metadata":{"id":"gjxinZIGR_aS","executionInfo":{"status":"ok","timestamp":1747229736129,"user_tz":-540,"elapsed":5,"user":{"displayName":"김민주","userId":"13715885916761677384"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["## 추출된 데이터 확인\n","print(\"df_X.shape:\", df_X.shape)\n","print(\"df_y.shape:\", df_y.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S2t03vjjS2s9","executionInfo":{"status":"ok","timestamp":1747229737181,"user_tz":-540,"elapsed":21,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"749abc29-aad2-4f1a-a0fe-b64c468660bf"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["df_X.shape: (87159, 15)\n","df_y.shape: (87159,)\n"]}]},{"cell_type":"code","source":["## 특징값 상위 5개 살펴보기\n","df_X.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"JcctvKXiS7KD","executionInfo":{"status":"ok","timestamp":1747229904213,"user_tz":-540,"elapsed":347,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"6f9732ec-ad31-41d6-f409-78db95d29374"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            ID  Age Gender Country Race Family_Background Radiation_History  \\\n","0  TRAIN_00000   80      M     CHN  ASN          Positive           Exposed   \n","1  TRAIN_00001   37      M     NGA  ASN          Positive         Unexposed   \n","2  TRAIN_00002   71      M     CHN  MDE          Positive         Unexposed   \n","3  TRAIN_00003   40      F     IND  HSP          Negative         Unexposed   \n","4  TRAIN_00004   53      F     CHN  CAU          Negative         Unexposed   \n","\n","  Iodine_Deficiency       Smoke Weight_Risk Diabetes  Nodule_Size  TSH_Result  \\\n","0        Sufficient  Non-Smoker   Not Obese       No     0.650355    2.784735   \n","1        Sufficient      Smoker       Obese       No     2.950430    0.911624   \n","2        Sufficient  Non-Smoker   Not Obese      Yes     2.200023    0.717754   \n","3        Sufficient  Non-Smoker       Obese       No     3.370796    6.846380   \n","4        Sufficient  Non-Smoker   Not Obese       No     4.230048    0.439519   \n","\n","   T4_Result  T3_Result  \n","0   6.744603   2.575820  \n","1   7.303305   2.505317  \n","2  11.137459   2.381080  \n","3  10.175254   0.753023  \n","4   7.194450   0.569356  "],"text/html":["\n","  <div id=\"df-e3776cc9-fa1c-470a-bf20-cc5de35dae16\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Age</th>\n","      <th>Gender</th>\n","      <th>Country</th>\n","      <th>Race</th>\n","      <th>Family_Background</th>\n","      <th>Radiation_History</th>\n","      <th>Iodine_Deficiency</th>\n","      <th>Smoke</th>\n","      <th>Weight_Risk</th>\n","      <th>Diabetes</th>\n","      <th>Nodule_Size</th>\n","      <th>TSH_Result</th>\n","      <th>T4_Result</th>\n","      <th>T3_Result</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>TRAIN_00000</td>\n","      <td>80</td>\n","      <td>M</td>\n","      <td>CHN</td>\n","      <td>ASN</td>\n","      <td>Positive</td>\n","      <td>Exposed</td>\n","      <td>Sufficient</td>\n","      <td>Non-Smoker</td>\n","      <td>Not Obese</td>\n","      <td>No</td>\n","      <td>0.650355</td>\n","      <td>2.784735</td>\n","      <td>6.744603</td>\n","      <td>2.575820</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>TRAIN_00001</td>\n","      <td>37</td>\n","      <td>M</td>\n","      <td>NGA</td>\n","      <td>ASN</td>\n","      <td>Positive</td>\n","      <td>Unexposed</td>\n","      <td>Sufficient</td>\n","      <td>Smoker</td>\n","      <td>Obese</td>\n","      <td>No</td>\n","      <td>2.950430</td>\n","      <td>0.911624</td>\n","      <td>7.303305</td>\n","      <td>2.505317</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>TRAIN_00002</td>\n","      <td>71</td>\n","      <td>M</td>\n","      <td>CHN</td>\n","      <td>MDE</td>\n","      <td>Positive</td>\n","      <td>Unexposed</td>\n","      <td>Sufficient</td>\n","      <td>Non-Smoker</td>\n","      <td>Not Obese</td>\n","      <td>Yes</td>\n","      <td>2.200023</td>\n","      <td>0.717754</td>\n","      <td>11.137459</td>\n","      <td>2.381080</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>TRAIN_00003</td>\n","      <td>40</td>\n","      <td>F</td>\n","      <td>IND</td>\n","      <td>HSP</td>\n","      <td>Negative</td>\n","      <td>Unexposed</td>\n","      <td>Sufficient</td>\n","      <td>Non-Smoker</td>\n","      <td>Obese</td>\n","      <td>No</td>\n","      <td>3.370796</td>\n","      <td>6.846380</td>\n","      <td>10.175254</td>\n","      <td>0.753023</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>TRAIN_00004</td>\n","      <td>53</td>\n","      <td>F</td>\n","      <td>CHN</td>\n","      <td>CAU</td>\n","      <td>Negative</td>\n","      <td>Unexposed</td>\n","      <td>Sufficient</td>\n","      <td>Non-Smoker</td>\n","      <td>Not Obese</td>\n","      <td>No</td>\n","      <td>4.230048</td>\n","      <td>0.439519</td>\n","      <td>7.194450</td>\n","      <td>0.569356</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e3776cc9-fa1c-470a-bf20-cc5de35dae16')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e3776cc9-fa1c-470a-bf20-cc5de35dae16 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e3776cc9-fa1c-470a-bf20-cc5de35dae16');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-6dc43048-1d48-4814-abbd-8a953626bda4\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6dc43048-1d48-4814-abbd-8a953626bda4')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-6dc43048-1d48-4814-abbd-8a953626bda4 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_X","summary":"{\n  \"name\": \"df_X\",\n  \"rows\": 87159,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 87159,\n        \"samples\": [\n          \"TRAIN_06266\",\n          \"TRAIN_00378\",\n          \"TRAIN_36129\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": 14,\n        \"max\": 88,\n        \"num_unique_values\": 75,\n        \"samples\": [\n          53,\n          74,\n          25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"KOR\",\n          \"NGA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Race\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"MDE\",\n          \"AFR\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Family_Background\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Negative\",\n          \"Positive\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Radiation_History\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Unexposed\",\n          \"Exposed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Iodine_Deficiency\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Deficient\",\n          \"Sufficient\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Smoke\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Smoker\",\n          \"Non-Smoker\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight_Risk\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Obese\",\n          \"Not Obese\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Diabetes\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nodule_Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.441928061560285,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 501,\n        \"samples\": [\n          2.460042,\n          1.350209\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TSH_Result\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.861229390138943,\n        \"min\": 0.1,\n        \"max\": 10.0,\n        \"num_unique_values\": 86590,\n        \"samples\": [\n          3.689433,\n          6.21504\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T4_Result\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.165974516752873,\n        \"min\": 4.5,\n        \"max\": 12.0,\n        \"num_unique_values\": 86473,\n        \"samples\": [\n          8.475276,\n          11.801826\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T3_Result\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8670128084133244,\n        \"min\": 0.5,\n        \"max\": 3.5,\n        \"num_unique_values\": 85302,\n        \"samples\": [\n          3.196713,\n          0.665974\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["## 클래스 분포 살펴보기\n","df_y.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"dnugbKvaNcPv","executionInfo":{"status":"ok","timestamp":1747229917456,"user_tz":-540,"elapsed":12,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"2eff5553-b0c4-42d3-e002-0a9d25b0e3ac"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Cancer\n","0    76700\n","1    10459\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Cancer</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>76700</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10459</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["## 2.2. 범주형 데이터(categorical)를 정수형 데이터(integer)로 변환하기"],"metadata":{"id":"SN477Lj3Lfgo"}},{"cell_type":"code","source":["## 열(column)별로 유니크(unique) 값 개수 조회\n","for i in range(df_X.shape[1]):\n","    print(i, len(df_X.iloc[:,i].value_counts()))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rRXaRFkOU5to","executionInfo":{"status":"ok","timestamp":1747230368963,"user_tz":-540,"elapsed":125,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"7e961e08-ef95-4641-d3eb-7a2d68bb39f0"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["0 87159\n","1 75\n","2 2\n","3 10\n","4 5\n","5 2\n","6 2\n","7 2\n","8 2\n","9 2\n","10 2\n","11 501\n","12 86590\n","13 86473\n","14 85302\n"]}]},{"cell_type":"code","source":["## 수작업(manual)으로 변환하는 예\n","## df_X.loc[:,'Gender'].map({'M':0, 'F':1})\n","## df_X.loc[:,'Race'].map({'CAU':0, 'ASN':1, 'AFR':2,  'HSP':3,  'MDE':4 })\n","\n","## 반복문(for)을 이용한 자동 변환\n","df_X_preprocessed = df_X.copy() # df_X의 사본(copy)을 만들고, 사본에 변환된 데이터를 저장할 것임\n","for k in [2,3,4,5,6,7,8,9,10]:\n","    mapper = {x:i for i,x in enumerate(df_X.iloc[:,k].value_counts().index)}\n","    df_X_preprocessed.iloc[:,k] = df_X_preprocessed.iloc[:, k].map(mapper)"],"metadata":{"id":"LhXRDNIRVdea","executionInfo":{"status":"ok","timestamp":1747230373760,"user_tz":-540,"elapsed":151,"user":{"displayName":"김민주","userId":"13715885916761677384"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["## 정수형 데이터로 변환된 결과 확인\n","df_X_preprocessed"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"zCYIy2dYYiQc","executionInfo":{"status":"ok","timestamp":1747230376163,"user_tz":-540,"elapsed":472,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"4a3f911b-7c4b-4c46-ee21-88795e404bc0"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                ID  Age Gender Country Race Family_Background  \\\n","0      TRAIN_00000   80      1       1    1                 1   \n","1      TRAIN_00001   37      1       2    1                 1   \n","2      TRAIN_00002   71      1       1    4                 1   \n","3      TRAIN_00003   40      0       0    3                 0   \n","4      TRAIN_00004   53      0       1    0                 0   \n","...            ...  ...    ...     ...  ...               ...   \n","87154  TRAIN_87154   65      0       0    1                 1   \n","87155  TRAIN_87155   53      1       2    1                 0   \n","87156  TRAIN_87156   29      0       3    0                 0   \n","87157  TRAIN_87157   52      0       0    1                 1   \n","87158  TRAIN_87158   81      0       8    0                 0   \n","\n","      Radiation_History Iodine_Deficiency Smoke Weight_Risk Diabetes  \\\n","0                     1                 0     0           0        0   \n","1                     0                 0     1           1        0   \n","2                     0                 0     0           0        1   \n","3                     0                 0     0           1        0   \n","4                     0                 0     0           0        0   \n","...                 ...               ...   ...         ...      ...   \n","87154                 0                 0     0           0        0   \n","87155                 0                 0     0           1        0   \n","87156                 0                 0     0           0        0   \n","87157                 0                 0     0           0        0   \n","87158                 1                 0     0           0        0   \n","\n","       Nodule_Size  TSH_Result  T4_Result  T3_Result  \n","0         0.650355    2.784735   6.744603   2.575820  \n","1         2.950430    0.911624   7.303305   2.505317  \n","2         2.200023    0.717754  11.137459   2.381080  \n","3         3.370796    6.846380  10.175254   0.753023  \n","4         4.230048    0.439519   7.194450   0.569356  \n","...            ...         ...        ...        ...  \n","87154     0.510802    3.786859   4.838150   0.625754  \n","87155     0.980413    4.335395   8.937716   2.728584  \n","87156     0.180998    5.724924   4.847265   3.318609  \n","87157     2.420773    4.978069  10.867191   2.259199  \n","87158     4.800598    1.353310  11.505252   3.335156  \n","\n","[87159 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-897f4b9e-3145-4be6-a68d-d5c327972e14\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Age</th>\n","      <th>Gender</th>\n","      <th>Country</th>\n","      <th>Race</th>\n","      <th>Family_Background</th>\n","      <th>Radiation_History</th>\n","      <th>Iodine_Deficiency</th>\n","      <th>Smoke</th>\n","      <th>Weight_Risk</th>\n","      <th>Diabetes</th>\n","      <th>Nodule_Size</th>\n","      <th>TSH_Result</th>\n","      <th>T4_Result</th>\n","      <th>T3_Result</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>TRAIN_00000</td>\n","      <td>80</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.650355</td>\n","      <td>2.784735</td>\n","      <td>6.744603</td>\n","      <td>2.575820</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>TRAIN_00001</td>\n","      <td>37</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.950430</td>\n","      <td>0.911624</td>\n","      <td>7.303305</td>\n","      <td>2.505317</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>TRAIN_00002</td>\n","      <td>71</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2.200023</td>\n","      <td>0.717754</td>\n","      <td>11.137459</td>\n","      <td>2.381080</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>TRAIN_00003</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3.370796</td>\n","      <td>6.846380</td>\n","      <td>10.175254</td>\n","      <td>0.753023</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>TRAIN_00004</td>\n","      <td>53</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4.230048</td>\n","      <td>0.439519</td>\n","      <td>7.194450</td>\n","      <td>0.569356</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>87154</th>\n","      <td>TRAIN_87154</td>\n","      <td>65</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.510802</td>\n","      <td>3.786859</td>\n","      <td>4.838150</td>\n","      <td>0.625754</td>\n","    </tr>\n","    <tr>\n","      <th>87155</th>\n","      <td>TRAIN_87155</td>\n","      <td>53</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.980413</td>\n","      <td>4.335395</td>\n","      <td>8.937716</td>\n","      <td>2.728584</td>\n","    </tr>\n","    <tr>\n","      <th>87156</th>\n","      <td>TRAIN_87156</td>\n","      <td>29</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.180998</td>\n","      <td>5.724924</td>\n","      <td>4.847265</td>\n","      <td>3.318609</td>\n","    </tr>\n","    <tr>\n","      <th>87157</th>\n","      <td>TRAIN_87157</td>\n","      <td>52</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.420773</td>\n","      <td>4.978069</td>\n","      <td>10.867191</td>\n","      <td>2.259199</td>\n","    </tr>\n","    <tr>\n","      <th>87158</th>\n","      <td>TRAIN_87158</td>\n","      <td>81</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4.800598</td>\n","      <td>1.353310</td>\n","      <td>11.505252</td>\n","      <td>3.335156</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>87159 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-897f4b9e-3145-4be6-a68d-d5c327972e14')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-897f4b9e-3145-4be6-a68d-d5c327972e14 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-897f4b9e-3145-4be6-a68d-d5c327972e14');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-8ae04eed-7805-470c-ae9b-1fa351e78e31\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8ae04eed-7805-470c-ae9b-1fa351e78e31')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-8ae04eed-7805-470c-ae9b-1fa351e78e31 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_5656591b-58ac-4a9a-a369-1057ed17feda\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_X_preprocessed')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5656591b-58ac-4a9a-a369-1057ed17feda button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_X_preprocessed');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_X_preprocessed","summary":"{\n  \"name\": \"df_X_preprocessed\",\n  \"rows\": 87159,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 87159,\n        \"samples\": [\n          \"TRAIN_06266\",\n          \"TRAIN_00378\",\n          \"TRAIN_36129\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": 14,\n        \"max\": 88,\n        \"num_unique_values\": 75,\n        \"samples\": [\n          53,\n          74,\n          25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 9,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          6,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Race\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Family_Background\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Radiation_History\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Iodine_Deficiency\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Smoke\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight_Risk\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Diabetes\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nodule_Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.441928061560285,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 501,\n        \"samples\": [\n          2.460042,\n          1.350209\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TSH_Result\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.861229390138943,\n        \"min\": 0.1,\n        \"max\": 10.0,\n        \"num_unique_values\": 86590,\n        \"samples\": [\n          3.689433,\n          6.21504\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T4_Result\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.165974516752873,\n        \"min\": 4.5,\n        \"max\": 12.0,\n        \"num_unique_values\": 86473,\n        \"samples\": [\n          8.475276,\n          11.801826\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T3_Result\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8670128084133244,\n        \"min\": 0.5,\n        \"max\": 3.5,\n        \"num_unique_values\": 85302,\n        \"samples\": [\n          3.196713,\n          0.665974\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["## (Advanced) 2.3. Hold-out method"],"metadata":{"id":"UzipnirC9D7z"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split"],"metadata":{"id":"ysay9K4W9H7E","executionInfo":{"status":"ok","timestamp":1747230474466,"user_tz":-540,"elapsed":1674,"user":{"displayName":"김민주","userId":"13715885916761677384"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["df_X_train, df_X_valid, df_y_train, df_y_valid = train_test_split(df_X_preprocessed, df_y, test_size=0.2, random_state=2025)"],"metadata":{"id":"nvxYuTLy9L-S","executionInfo":{"status":"ok","timestamp":1747230474516,"user_tz":-540,"elapsed":45,"user":{"displayName":"김민주","userId":"13715885916761677384"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["print(\"df_X_train.shape:\", df_X_train.shape)\n","print(\"df_y_train.shape:\", df_y_train.shape)\n","print(\"df_X_valid.shape:\", df_X_valid.shape)\n","print(\"df_y_valid.shape:\", df_y_valid.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8cKIjmaq986a","executionInfo":{"status":"ok","timestamp":1747230476083,"user_tz":-540,"elapsed":15,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"b0965f71-576c-448a-915c-4e9d313b3596"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["df_X_train.shape: (69727, 15)\n","df_y_train.shape: (69727,)\n","df_X_valid.shape: (17432, 15)\n","df_y_valid.shape: (17432,)\n"]}]},{"cell_type":"markdown","source":["## (Advanced) 2.3. 특징 정규화 하기"],"metadata":{"id":"KT9Cb_PrUCjy"}},{"cell_type":"code","source":["from sklearn.preprocessing import MinMaxScaler"],"metadata":{"id":"c3zsLauGUGtQ","executionInfo":{"status":"ok","timestamp":1747230477779,"user_tz":-540,"elapsed":22,"user":{"displayName":"김민주","userId":"13715885916761677384"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["## 스케일러 초기화 및 훈련\n","scaler = MinMaxScaler()\n","scaler = scaler.fit(df_X_train.iloc[:,1:])\n","\n","## 사본 만들기\n","df_X_train_scaled = df_X_train.copy()\n","df_X_valid_scaled = df_X_valid.copy()\n","\n","## 특징 정규화하기\n","df_X_train_scaled.iloc[:,1:] = scaler.transform(df_X_train.iloc[:,1:])\n","df_X_valid_scaled.iloc[:,1:] = scaler.transform(df_X_valid.iloc[:,1:])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NeMbaOQgUb9y","executionInfo":{"status":"ok","timestamp":1747230478772,"user_tz":-540,"elapsed":321,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"b7ad29ad-d180-4a17-ea64-fd4acb9d942c"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-20-c5d363e9916c>:10: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[0.54054054 0.2027027  0.44594595 ... 0.35135135 0.45945946 0.74324324]' has dtype incompatible with int64, please explicitly cast to a compatible dtype first.\n","  df_X_train_scaled.iloc[:,1:] = scaler.transform(df_X_train.iloc[:,1:])\n","<ipython-input-20-c5d363e9916c>:11: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[0.02702703 0.58108108 0.58108108 ... 0.47297297 0.74324324 0.10810811]' has dtype incompatible with int64, please explicitly cast to a compatible dtype first.\n","  df_X_valid_scaled.iloc[:,1:] = scaler.transform(df_X_valid.iloc[:,1:])\n"]}]},{"cell_type":"code","source":["## 정규화 결과 살펴보기\n","df_X_train_scaled.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"kPjgkK_fU1rG","executionInfo":{"status":"ok","timestamp":1747230482000,"user_tz":-540,"elapsed":95,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"f20a83d5-7c40-4187-869c-2ee86198b843"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                ID       Age Gender   Country  Race Family_Background  \\\n","68663  TRAIN_68663  0.540541    1.0  0.333333   0.5               0.0   \n","79215  TRAIN_79215  0.202703    1.0  0.111111  0.25               0.0   \n","31297  TRAIN_31297  0.445946    0.0       0.0  0.75               1.0   \n","38250  TRAIN_38250  0.216216    1.0  0.888889   0.0               0.0   \n","52193  TRAIN_52193  0.229730    0.0  0.666667   1.0               1.0   \n","\n","      Radiation_History Iodine_Deficiency Smoke Weight_Risk Diabetes  \\\n","68663               0.0               1.0   0.0         1.0      0.0   \n","79215               0.0               0.0   0.0         0.0      0.0   \n","31297               0.0               0.0   0.0         0.0      0.0   \n","38250               1.0               0.0   0.0         0.0      0.0   \n","52193               0.0               0.0   1.0         1.0      0.0   \n","\n","       Nodule_Size  TSH_Result  T4_Result  T3_Result  \n","68663     0.486038    0.305491   0.604188   0.734564  \n","79215     0.914036    0.121389   0.467624   0.267282  \n","31297     0.270042    0.311699   0.574004   0.288516  \n","38250     0.568117    0.504883   0.875885   0.668458  \n","52193     0.600174    0.127418   0.351337   0.729839  "],"text/html":["\n","  <div id=\"df-5ff1e008-f51d-4a46-93c6-e6500aa8fb43\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Age</th>\n","      <th>Gender</th>\n","      <th>Country</th>\n","      <th>Race</th>\n","      <th>Family_Background</th>\n","      <th>Radiation_History</th>\n","      <th>Iodine_Deficiency</th>\n","      <th>Smoke</th>\n","      <th>Weight_Risk</th>\n","      <th>Diabetes</th>\n","      <th>Nodule_Size</th>\n","      <th>TSH_Result</th>\n","      <th>T4_Result</th>\n","      <th>T3_Result</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>68663</th>\n","      <td>TRAIN_68663</td>\n","      <td>0.540541</td>\n","      <td>1.0</td>\n","      <td>0.333333</td>\n","      <td>0.5</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.486038</td>\n","      <td>0.305491</td>\n","      <td>0.604188</td>\n","      <td>0.734564</td>\n","    </tr>\n","    <tr>\n","      <th>79215</th>\n","      <td>TRAIN_79215</td>\n","      <td>0.202703</td>\n","      <td>1.0</td>\n","      <td>0.111111</td>\n","      <td>0.25</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.914036</td>\n","      <td>0.121389</td>\n","      <td>0.467624</td>\n","      <td>0.267282</td>\n","    </tr>\n","    <tr>\n","      <th>31297</th>\n","      <td>TRAIN_31297</td>\n","      <td>0.445946</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.75</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.270042</td>\n","      <td>0.311699</td>\n","      <td>0.574004</td>\n","      <td>0.288516</td>\n","    </tr>\n","    <tr>\n","      <th>38250</th>\n","      <td>TRAIN_38250</td>\n","      <td>0.216216</td>\n","      <td>1.0</td>\n","      <td>0.888889</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.568117</td>\n","      <td>0.504883</td>\n","      <td>0.875885</td>\n","      <td>0.668458</td>\n","    </tr>\n","    <tr>\n","      <th>52193</th>\n","      <td>TRAIN_52193</td>\n","      <td>0.229730</td>\n","      <td>0.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.600174</td>\n","      <td>0.127418</td>\n","      <td>0.351337</td>\n","      <td>0.729839</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5ff1e008-f51d-4a46-93c6-e6500aa8fb43')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5ff1e008-f51d-4a46-93c6-e6500aa8fb43 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5ff1e008-f51d-4a46-93c6-e6500aa8fb43');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-15cacc8f-dae1-4983-b98d-641389b7eba1\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-15cacc8f-dae1-4983-b98d-641389b7eba1')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-15cacc8f-dae1-4983-b98d-641389b7eba1 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_X_train_scaled","repr_error":"0"}},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["# 3. 모델 훈련하기"],"metadata":{"id":"QfzNEg_h-X93"}},{"cell_type":"code","source":["from xgboost import XGBClassifier\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import f1_score"],"metadata":{"id":"3Ne9Rfni-XjN","executionInfo":{"status":"ok","timestamp":1747230484834,"user_tz":-540,"elapsed":1130,"user":{"displayName":"김민주","userId":"13715885916761677384"}}},"execution_count":22,"outputs":[]},{"cell_type":"markdown","source":["## 3.1. 훈련데이터로 학습"],"metadata":{"id":"9gBbAi-Y_3b6"}},{"cell_type":"code","source":["# clf = LogisticRegression(random_state=2025).fit(df_X_train_scaled.drop('ID', axis=1), df_y_train)\n","clf = RandomForestClassifier(random_state=2025).fit(df_X_train_scaled.drop('ID', axis=1), df_y_train)\n","# clf = XGBClassifier(random_state=2025).fit(df_X_train_scaled.drop('ID', axis=1).values, df_y_train)"],"metadata":{"id":"LwcfTLci-dZa","executionInfo":{"status":"ok","timestamp":1747230506398,"user_tz":-540,"elapsed":18841,"user":{"displayName":"김민주","userId":"13715885916761677384"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["score = f1_score(df_y_train, clf.predict(df_X_train_scaled.drop('ID', axis=1).values))\n","print(\"F1 score:\", score)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vdbA5hA6CGFk","executionInfo":{"status":"ok","timestamp":1747230508226,"user_tz":-540,"elapsed":1821,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"3a0b0386-05dd-415a-9f55-d2364266de8b"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/validation.py:2739: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["F1 score: 0.9997617345723135\n"]}]},{"cell_type":"markdown","source":["## 3.2. 검증데이터로 평가"],"metadata":{"id":"SoRka8NP_5ew"}},{"cell_type":"code","source":["p_valid = clf.predict(df_X_valid_scaled.drop('ID', axis=1).values)"],"metadata":{"id":"eEhrZQ2Y_0wm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747230999545,"user_tz":-540,"elapsed":543,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"0d0967b4-b4d0-4460-d813-9bf90ab2736a"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/validation.py:2739: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["score = f1_score(df_y_valid, p_valid)\n","print(\"F1 score:\", score)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OEczvHBmBBtw","executionInfo":{"status":"ok","timestamp":1747230999562,"user_tz":-540,"elapsed":12,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"8d41ea59-a64a-4987-e4ce-5cc4e6f41037"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["F1 score: 0.2373134328358209\n"]}]},{"cell_type":"markdown","source":["# 3. 시험 데이터 불러오기"],"metadata":{"id":"iNxcbfeBNXol"}},{"cell_type":"markdown","source":["## 3.1. CSV 파일을 Pandas 데이터프레임으로 불러오기"],"metadata":{"id":"n5HL7RuQN2g2"}},{"cell_type":"code","source":["## 파일 경로 확인\n","filepath_test = os.path.join(dirname, 'test.csv')\n","print(os.path.exists(filepath_test))"],"metadata":{"id":"B1Co9rfSZSk8","executionInfo":{"status":"ok","timestamp":1747231001232,"user_tz":-540,"elapsed":11,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"2e0b36e9-4adf-4803-d11c-a3eda16cd057"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["True\n"]}]},{"cell_type":"code","source":["## CSV 파일 불러오기\n","df_test = pd.read_csv(filepath_test)"],"metadata":{"id":"FeVUO6cTZrBl","executionInfo":{"status":"ok","timestamp":1747231005331,"user_tz":-540,"elapsed":594,"user":{"displayName":"김민주","userId":"13715885916761677384"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["## 시험 데이터 확인\n","print(df_test.shape)\n","df_test.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":314},"id":"4yuZItMlZsD8","executionInfo":{"status":"ok","timestamp":1747231005578,"user_tz":-540,"elapsed":239,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"b075b594-8d05-4dae-cea6-ed589c759fcb"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["(46204, 15)\n"]},{"output_type":"execute_result","data":{"text/plain":["           ID  Age Gender Country Race Family_Background Radiation_History  \\\n","0  TEST_00000   53      M     NGA  CAU          Negative         Unexposed   \n","1  TEST_00001   46      M     KOR  MDE          Negative         Unexposed   \n","2  TEST_00002   78      F     IND  ASN          Negative           Exposed   \n","3  TEST_00003   69      F     KOR  CAU          Negative         Unexposed   \n","4  TEST_00004   77      F     KOR  CAU          Positive         Unexposed   \n","\n","  Iodine_Deficiency       Smoke Weight_Risk Diabetes  Nodule_Size  TSH_Result  \\\n","0        Sufficient  Non-Smoker   Not Obese       No     2.940678    6.434501   \n","1         Deficient      Smoker       Obese       No     3.450129    4.729535   \n","2        Sufficient  Non-Smoker       Obese       No     4.680720    5.663475   \n","3        Sufficient  Non-Smoker   Not Obese       No     4.280588    7.473752   \n","4        Sufficient  Non-Smoker       Obese       No     3.380094    7.099987   \n","\n","   T4_Result  T3_Result  \n","0   9.227958   2.733846  \n","1   5.937664   0.775012  \n","2  10.455964   1.259896  \n","3   8.785335   2.826138  \n","4   8.737063   3.453563  "],"text/html":["\n","  <div id=\"df-da01a2f7-11b2-47bb-b86d-a621eddff26a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Age</th>\n","      <th>Gender</th>\n","      <th>Country</th>\n","      <th>Race</th>\n","      <th>Family_Background</th>\n","      <th>Radiation_History</th>\n","      <th>Iodine_Deficiency</th>\n","      <th>Smoke</th>\n","      <th>Weight_Risk</th>\n","      <th>Diabetes</th>\n","      <th>Nodule_Size</th>\n","      <th>TSH_Result</th>\n","      <th>T4_Result</th>\n","      <th>T3_Result</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>TEST_00000</td>\n","      <td>53</td>\n","      <td>M</td>\n","      <td>NGA</td>\n","      <td>CAU</td>\n","      <td>Negative</td>\n","      <td>Unexposed</td>\n","      <td>Sufficient</td>\n","      <td>Non-Smoker</td>\n","      <td>Not Obese</td>\n","      <td>No</td>\n","      <td>2.940678</td>\n","      <td>6.434501</td>\n","      <td>9.227958</td>\n","      <td>2.733846</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>TEST_00001</td>\n","      <td>46</td>\n","      <td>M</td>\n","      <td>KOR</td>\n","      <td>MDE</td>\n","      <td>Negative</td>\n","      <td>Unexposed</td>\n","      <td>Deficient</td>\n","      <td>Smoker</td>\n","      <td>Obese</td>\n","      <td>No</td>\n","      <td>3.450129</td>\n","      <td>4.729535</td>\n","      <td>5.937664</td>\n","      <td>0.775012</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>TEST_00002</td>\n","      <td>78</td>\n","      <td>F</td>\n","      <td>IND</td>\n","      <td>ASN</td>\n","      <td>Negative</td>\n","      <td>Exposed</td>\n","      <td>Sufficient</td>\n","      <td>Non-Smoker</td>\n","      <td>Obese</td>\n","      <td>No</td>\n","      <td>4.680720</td>\n","      <td>5.663475</td>\n","      <td>10.455964</td>\n","      <td>1.259896</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>TEST_00003</td>\n","      <td>69</td>\n","      <td>F</td>\n","      <td>KOR</td>\n","      <td>CAU</td>\n","      <td>Negative</td>\n","      <td>Unexposed</td>\n","      <td>Sufficient</td>\n","      <td>Non-Smoker</td>\n","      <td>Not Obese</td>\n","      <td>No</td>\n","      <td>4.280588</td>\n","      <td>7.473752</td>\n","      <td>8.785335</td>\n","      <td>2.826138</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>TEST_00004</td>\n","      <td>77</td>\n","      <td>F</td>\n","      <td>KOR</td>\n","      <td>CAU</td>\n","      <td>Positive</td>\n","      <td>Unexposed</td>\n","      <td>Sufficient</td>\n","      <td>Non-Smoker</td>\n","      <td>Obese</td>\n","      <td>No</td>\n","      <td>3.380094</td>\n","      <td>7.099987</td>\n","      <td>8.737063</td>\n","      <td>3.453563</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-da01a2f7-11b2-47bb-b86d-a621eddff26a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-da01a2f7-11b2-47bb-b86d-a621eddff26a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-da01a2f7-11b2-47bb-b86d-a621eddff26a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-32caa271-dbb2-4235-b039-2429a1e91287\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-32caa271-dbb2-4235-b039-2429a1e91287')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-32caa271-dbb2-4235-b039-2429a1e91287 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_test","summary":"{\n  \"name\": \"df_test\",\n  \"rows\": 46204,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 46204,\n        \"samples\": [\n          \"TEST_17815\",\n          \"TEST_11616\",\n          \"TEST_09562\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": 14,\n        \"max\": 88,\n        \"num_unique_values\": 75,\n        \"samples\": [\n          77,\n          84,\n          35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"RUS\",\n          \"KOR\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Race\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"MDE\",\n          \"HSP\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Family_Background\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Positive\",\n          \"Negative\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Radiation_History\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Exposed\",\n          \"Unexposed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Iodine_Deficiency\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Deficient\",\n          \"Sufficient\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Smoke\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Smoker\",\n          \"Non-Smoker\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight_Risk\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Obese\",\n          \"Not Obese\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Diabetes\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nodule_Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4475301273001004,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 501,\n        \"samples\": [\n          3.600589,\n          4.510828\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TSH_Result\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.850824664520178,\n        \"min\": 0.1,\n        \"max\": 10.0,\n        \"num_unique_values\": 46023,\n        \"samples\": [\n          5.593456,\n          1.162878\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T4_Result\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.164385424598183,\n        \"min\": 4.5,\n        \"max\": 12.0,\n        \"num_unique_values\": 45987,\n        \"samples\": [\n          6.486798,\n          6.455323\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T3_Result\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.865788690163558,\n        \"min\": 0.5,\n        \"max\": 3.5,\n        \"num_unique_values\": 45628,\n        \"samples\": [\n          1.384653,\n          1.969616\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["## 3.2. 범주형 데이터(categorical)를 정수형 데이터(integer)로 변환하기"],"metadata":{"id":"CuUlx2O0N--5"}},{"cell_type":"code","source":["## 훈련데이터를 이용하여 mapper를 계산하고, 이를 시험데이터에 적용해야 함을 주의할 것\n","df_test_preprocessed = df_test.copy()\n","for k in [2,3,4,5,6,7,8,9,10]:\n","    mapper = {x:i for i,x in enumerate(df_X.iloc[:,k].value_counts().index)}\n","    print(mapper)\n","\n","    df_test_preprocessed.iloc[:,k] = df_test_preprocessed.iloc[:, k].map(mapper)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RXSv71yUZtDt","executionInfo":{"status":"ok","timestamp":1747231007024,"user_tz":-540,"elapsed":136,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"33a06aed-75ef-4ecc-bc69-2f07c5c00f71"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["{'F': 0, 'M': 1}\n","{'IND': 0, 'CHN': 1, 'NGA': 2, 'RUS': 3, 'BRA': 4, 'JPN': 5, 'KOR': 6, 'GBR': 7, 'USA': 8, 'DEU': 9}\n","{'CAU': 0, 'ASN': 1, 'AFR': 2, 'HSP': 3, 'MDE': 4}\n","{'Negative': 0, 'Positive': 1}\n","{'Unexposed': 0, 'Exposed': 1}\n","{'Sufficient': 0, 'Deficient': 1}\n","{'Non-Smoker': 0, 'Smoker': 1}\n","{'Not Obese': 0, 'Obese': 1}\n","{'No': 0, 'Yes': 1}\n"]}]},{"cell_type":"code","source":["## 정수형 데이터로 변환된 결과 확인\n","df_test_preprocessed"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"fnjHLhpRZ8yV","executionInfo":{"status":"ok","timestamp":1747231013175,"user_tz":-540,"elapsed":355,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"f809119c-fbfd-4dfa-dae5-7448fd2d8d2f"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               ID  Age Gender Country Race Family_Background  \\\n","0      TEST_00000   53      1       2    0                 0   \n","1      TEST_00001   46      1       6    4                 0   \n","2      TEST_00002   78      0       0    1                 0   \n","3      TEST_00003   69      0       6    0                 0   \n","4      TEST_00004   77      0       6    0                 1   \n","...           ...  ...    ...     ...  ...               ...   \n","46199  TEST_46199   17      0       3    1                 0   \n","46200  TEST_46200   37      1       5    4                 0   \n","46201  TEST_46201   18      1       0    0                 0   \n","46202  TEST_46202   39      1       0    2                 0   \n","46203  TEST_46203   68      0       2    3                 1   \n","\n","      Radiation_History Iodine_Deficiency Smoke Weight_Risk Diabetes  \\\n","0                     0                 0     0           0        0   \n","1                     0                 1     1           1        0   \n","2                     1                 0     0           1        0   \n","3                     0                 0     0           0        0   \n","4                     0                 0     0           1        0   \n","...                 ...               ...   ...         ...      ...   \n","46199                 1                 0     0           0        0   \n","46200                 0                 1     0           0        0   \n","46201                 0                 0     1           0        0   \n","46202                 0                 0     0           0        0   \n","46203                 0                 1     1           0        0   \n","\n","       Nodule_Size  TSH_Result  T4_Result  T3_Result  \n","0         2.940678    6.434501   9.227958   2.733846  \n","1         3.450129    4.729535   5.937664   0.775012  \n","2         4.680720    5.663475  10.455964   1.259896  \n","3         4.280588    7.473752   8.785335   2.826138  \n","4         3.380094    7.099987   8.737063   3.453563  \n","...            ...         ...        ...        ...  \n","46199     0.050563    7.356242   7.729139   1.038126  \n","46200     3.010883    3.981898   6.739967   2.252667  \n","46201     4.780738    3.142235  11.883107   1.044195  \n","46202     0.420837    3.534950   8.294455   1.774779  \n","46203     2.690105    9.494194   6.666820   3.076600  \n","\n","[46204 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-3b791ed2-6df8-4761-9b7f-35f89aa30436\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Age</th>\n","      <th>Gender</th>\n","      <th>Country</th>\n","      <th>Race</th>\n","      <th>Family_Background</th>\n","      <th>Radiation_History</th>\n","      <th>Iodine_Deficiency</th>\n","      <th>Smoke</th>\n","      <th>Weight_Risk</th>\n","      <th>Diabetes</th>\n","      <th>Nodule_Size</th>\n","      <th>TSH_Result</th>\n","      <th>T4_Result</th>\n","      <th>T3_Result</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>TEST_00000</td>\n","      <td>53</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.940678</td>\n","      <td>6.434501</td>\n","      <td>9.227958</td>\n","      <td>2.733846</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>TEST_00001</td>\n","      <td>46</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3.450129</td>\n","      <td>4.729535</td>\n","      <td>5.937664</td>\n","      <td>0.775012</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>TEST_00002</td>\n","      <td>78</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4.680720</td>\n","      <td>5.663475</td>\n","      <td>10.455964</td>\n","      <td>1.259896</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>TEST_00003</td>\n","      <td>69</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4.280588</td>\n","      <td>7.473752</td>\n","      <td>8.785335</td>\n","      <td>2.826138</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>TEST_00004</td>\n","      <td>77</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3.380094</td>\n","      <td>7.099987</td>\n","      <td>8.737063</td>\n","      <td>3.453563</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>46199</th>\n","      <td>TEST_46199</td>\n","      <td>17</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.050563</td>\n","      <td>7.356242</td>\n","      <td>7.729139</td>\n","      <td>1.038126</td>\n","    </tr>\n","    <tr>\n","      <th>46200</th>\n","      <td>TEST_46200</td>\n","      <td>37</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3.010883</td>\n","      <td>3.981898</td>\n","      <td>6.739967</td>\n","      <td>2.252667</td>\n","    </tr>\n","    <tr>\n","      <th>46201</th>\n","      <td>TEST_46201</td>\n","      <td>18</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4.780738</td>\n","      <td>3.142235</td>\n","      <td>11.883107</td>\n","      <td>1.044195</td>\n","    </tr>\n","    <tr>\n","      <th>46202</th>\n","      <td>TEST_46202</td>\n","      <td>39</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.420837</td>\n","      <td>3.534950</td>\n","      <td>8.294455</td>\n","      <td>1.774779</td>\n","    </tr>\n","    <tr>\n","      <th>46203</th>\n","      <td>TEST_46203</td>\n","      <td>68</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.690105</td>\n","      <td>9.494194</td>\n","      <td>6.666820</td>\n","      <td>3.076600</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>46204 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b791ed2-6df8-4761-9b7f-35f89aa30436')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3b791ed2-6df8-4761-9b7f-35f89aa30436 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3b791ed2-6df8-4761-9b7f-35f89aa30436');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-c05aec5f-a175-412d-86b9-8acb4b7fd758\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c05aec5f-a175-412d-86b9-8acb4b7fd758')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-c05aec5f-a175-412d-86b9-8acb4b7fd758 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_91437271-edd4-478b-9273-43842b526427\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_test_preprocessed')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_91437271-edd4-478b-9273-43842b526427 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_test_preprocessed');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_test_preprocessed","summary":"{\n  \"name\": \"df_test_preprocessed\",\n  \"rows\": 46204,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 46204,\n        \"samples\": [\n          \"TEST_17815\",\n          \"TEST_11616\",\n          \"TEST_09562\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": 14,\n        \"max\": 88,\n        \"num_unique_values\": 75,\n        \"samples\": [\n          77,\n          84,\n          35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 9,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          3,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Race\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Family_Background\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Radiation_History\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Iodine_Deficiency\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Smoke\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight_Risk\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Diabetes\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nodule_Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4475301273001004,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 501,\n        \"samples\": [\n          3.600589,\n          4.510828\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TSH_Result\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.850824664520178,\n        \"min\": 0.1,\n        \"max\": 10.0,\n        \"num_unique_values\": 46023,\n        \"samples\": [\n          5.593456,\n          1.162878\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T4_Result\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.164385424598183,\n        \"min\": 4.5,\n        \"max\": 12.0,\n        \"num_unique_values\": 45987,\n        \"samples\": [\n          6.486798,\n          6.455323\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T3_Result\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.865788690163558,\n        \"min\": 0.5,\n        \"max\": 3.5,\n        \"num_unique_values\": 45628,\n        \"samples\": [\n          1.384653,\n          1.969616\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":31}]},{"cell_type":"markdown","source":["## (Advanced) 시험데이터 정규화하기"],"metadata":{"id":"XQAMtcFrXCbt"}},{"cell_type":"code","source":["## 사본 만들기\n","df_test_scaled = df_test_preprocessed.copy()\n","\n","## 특징 정규화하기\n","df_test_scaled.iloc[:,1:] = scaler.transform(df_test_scaled.iloc[:,1:])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gPIq5N5mXB8Y","executionInfo":{"status":"ok","timestamp":1747231014595,"user_tz":-540,"elapsed":97,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"02d323bb-256f-4653-eee3-f913eb7c5b90"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-32-7edfc96137fb>:5: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise in a future error of pandas. Value '[0.52702703 0.43243243 0.86486486 ... 0.05405405 0.33783784 0.72972973]' has dtype incompatible with int64, please explicitly cast to a compatible dtype first.\n","  df_test_scaled.iloc[:,1:] = scaler.transform(df_test_scaled.iloc[:,1:])\n"]}]},{"cell_type":"markdown","source":["## (Advanced) 4.3. 훈련데이터와 시험데이터 시각화"],"metadata":{"id":"NVFqR2OwV7fX"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","from sklearn.decomposition import PCA"],"metadata":{"id":"1yXODy5nV_ij","executionInfo":{"status":"ok","timestamp":1747231017747,"user_tz":-540,"elapsed":26,"user":{"displayName":"김민주","userId":"13715885916761677384"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["## PCA 기반의 차원 축소\n","pca = PCA(n_components=2)\n","points_X = pca.fit_transform(df_X_train_scaled.iloc[:,1:])\n","points_test = pca.transform(df_test_scaled.iloc[:,1:])"],"metadata":{"id":"yo5LLOWNV_gG","executionInfo":{"status":"ok","timestamp":1747231018464,"user_tz":-540,"elapsed":341,"user":{"displayName":"김민주","userId":"13715885916761677384"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["# 차원 축소 결과 살펴보기\n","print(points_X.shape)\n","print(points_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OxI7Ach5V_X0","executionInfo":{"status":"ok","timestamp":1747231018579,"user_tz":-540,"elapsed":16,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"4767e3f3-25ff-4b69-f213-48e3e6c9f2af"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["(69727, 2)\n","(46204, 2)\n"]}]},{"cell_type":"code","source":["fig, ax = plt.subplots(figsize=(6,6))\n","\n","ax.scatter(points_X[df_y_train==1][:,0], points_X[df_y_train==1][:,1], marker='.', alpha=0.2, label='Training (Pos)')\n","ax.scatter(points_X[df_y_train==0][:,0], points_X[df_y_train==0][:,1], marker='.', alpha=0.2, label='Training (Neg)')\n","ax.scatter(points_test[:,0], points_test[:,1], marker='.', alpha=0.2, label='Test')\n","\n","ax.set_xlabel('PCA 1')\n","ax.set_ylabel('PCA 2')\n","ax.legend()\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":607},"id":"3DUIf56dWmwU","executionInfo":{"status":"ok","timestamp":1747231023528,"user_tz":-540,"elapsed":1799,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"537ca99e-0389-462a-e5c4-c293b57aeaa1"},"execution_count":36,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 600x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["fig, ax = plt.subplots(1, 3, figsize=(12,4))\n","\n","## Pos\n","ax[0].scatter(points_X[df_y_train==1][:,0], points_X[df_y_train==1][:,1], c='b', marker='.', alpha=0.2)\n","ax[0].set_title('Training (Pos)')\n","\n","## Neg\n","ax[1].scatter(points_X[df_y_train==0][:,0], points_X[df_y_train==0][:,1], c='r', marker='.', alpha=0.2)\n","ax[1].set_title('Training (Neg)')\n","\n","## Test\n","ax[2].scatter(points_test[:,0], points_test[:,1], c='g', marker='.', alpha=0.2)\n","ax[2].set_title('Test')\n","\n","## Align\n","for i in range(3):\n","    ax[i].set_xlim(-0.9, 0.9)\n","    ax[i].set_ylim(-0.9, 0.9)\n","\n","## Show\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":254},"id":"xOJPAL4lY-JM","executionInfo":{"status":"ok","timestamp":1747231025856,"user_tz":-540,"elapsed":912,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"fba53e86-0305-453e-bf76-08f6d5876f90"},"execution_count":37,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x400 with 3 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## 4.1. 시험데이터의 레이블 예측하기"],"metadata":{"id":"voUxXDlHOfSl"}},{"cell_type":"code","source":["prediction = clf.predict(df_test_scaled.drop('ID', axis=1).values)"],"metadata":{"id":"bL7SahFDaci9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747231030166,"user_tz":-540,"elapsed":1235,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"c1262e4d-1c80-4808-828e-61ea6403d4a1"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/validation.py:2739: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["## 예측 결과 살펴보기\n","print(prediction.shape)\n","print(\"Positive (prediction):\", prediction.sum())\n","print(\"Negative (prediction):\", prediction.shape[0] - prediction.sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7uPd4wZfOquR","executionInfo":{"status":"ok","timestamp":1747231030235,"user_tz":-540,"elapsed":32,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"60c6a6d4-1695-4c51-da37-20f1ef8fcee9"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["(46204,)\n","Positive (prediction): 1924\n","Negative (prediction): 44280\n"]}]},{"cell_type":"markdown","source":["## 4.4. 제출용 CSV 파일 만들기"],"metadata":{"id":"yZfqImh0O5eN"}},{"cell_type":"code","source":["df_submission = df_test_preprocessed.loc[:,'ID'].to_frame()"],"metadata":{"id":"ueCndx29auYb","executionInfo":{"status":"ok","timestamp":1747231031297,"user_tz":-540,"elapsed":6,"user":{"displayName":"김민주","userId":"13715885916761677384"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["df_submission.loc[:,'Cancer'] = prediction"],"metadata":{"id":"x682pHkVa7d7","executionInfo":{"status":"ok","timestamp":1747231031953,"user_tz":-540,"elapsed":8,"user":{"displayName":"김민주","userId":"13715885916761677384"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":["## 제출용 파일 확인\n","print(df_submission.shape)\n","df_submission"],"metadata":{"id":"f1fnOM4SbbiC","colab":{"base_uri":"https://localhost:8080/","height":442},"executionInfo":{"status":"ok","timestamp":1747231032735,"user_tz":-540,"elapsed":60,"user":{"displayName":"김민주","userId":"13715885916761677384"}},"outputId":"8d515e71-ec74-469c-d926-4052d85d6ec9"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["(46204, 2)\n"]},{"output_type":"execute_result","data":{"text/plain":["               ID  Cancer\n","0      TEST_00000       0\n","1      TEST_00001       0\n","2      TEST_00002       0\n","3      TEST_00003       0\n","4      TEST_00004       0\n","...           ...     ...\n","46199  TEST_46199       0\n","46200  TEST_46200       0\n","46201  TEST_46201       0\n","46202  TEST_46202       0\n","46203  TEST_46203       0\n","\n","[46204 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-a5411d52-dd38-4310-8af0-70a42cc42e92\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Cancer</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>TEST_00000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>TEST_00001</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>TEST_00002</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>TEST_00003</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>TEST_00004</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>46199</th>\n","      <td>TEST_46199</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>46200</th>\n","      <td>TEST_46200</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>46201</th>\n","      <td>TEST_46201</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>46202</th>\n","      <td>TEST_46202</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>46203</th>\n","      <td>TEST_46203</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>46204 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a5411d52-dd38-4310-8af0-70a42cc42e92')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a5411d52-dd38-4310-8af0-70a42cc42e92 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a5411d52-dd38-4310-8af0-70a42cc42e92');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-1ec01b5b-b202-4822-9765-ee2d6d12e363\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1ec01b5b-b202-4822-9765-ee2d6d12e363')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-1ec01b5b-b202-4822-9765-ee2d6d12e363 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_c6777733-d064-4b1b-a998-53a1eed45117\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_submission')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_c6777733-d064-4b1b-a998-53a1eed45117 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_submission');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_submission","summary":"{\n  \"name\": \"df_submission\",\n  \"rows\": 46204,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 46204,\n        \"samples\": [\n          \"TEST_17815\",\n          \"TEST_11616\",\n          \"TEST_09562\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cancer\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["## CSV 저장하기 -> 구글 드라이브에 파일이 생성되었는지 체크하고, 해당 파일을 DACON에 제출해보기\n","df_submission.to_csv(os.path.join(dirname, 'submission_advanced.csv'), index=False)"],"metadata":{"id":"pmaE8gDgPyRY","executionInfo":{"status":"ok","timestamp":1747231037376,"user_tz":-540,"elapsed":606,"user":{"displayName":"김민주","userId":"13715885916761677384"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"6P5KygtUP_bJ"},"execution_count":null,"outputs":[]}]}